{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","Todo","todos","completeTodo","removeTodo","updateTodo","edit","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","console","log","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAoCeA,MAlCf,SAAkBC,GAClB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAkBI,OACI,uBAAMC,UAAU,YAAYC,SAbf,SAAAC,GACjBA,EAAEC,iBAEFP,EAAMK,SAAS,CACXG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMV,IAGVC,EAAS,KAKL,UACI,uBACAU,KAAK,OACLC,YAAY,aACZC,MAAOb,EACPc,KAAK,OACLZ,UAAU,aACVa,SAxBS,SAAAX,GACjBH,EAASG,EAAEY,OAAOH,UAyBV,wBAAQX,UAAU,cAAlB,0B,sBCWGe,MApCf,YAAgE,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,aAAcC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,WAC7C,EAAwBtB,mBAAS,CAC7BO,GAAI,KACJO,MAAO,KAFX,mBAAOS,EAAP,KAAaC,EAAb,KAaA,OAAID,EAAKhB,GACE,cAAC,EAAD,CAAUgB,KAAMA,EAAMnB,SATZ,SAAAU,GACjBQ,EAAWC,EAAKhB,GAAIO,GACpBU,EAAQ,CACJjB,GAAI,KACJO,MAAO,QAQRK,EAAMM,KAAI,SAACC,EAAMC,GAAP,OACb,sBAAKxB,UAAWuB,EAAKE,WAAa,oBAAsB,WAAxD,UAGI,qBAAmBC,QAAS,kBAAMT,EAAaM,EAAKnB,KAApD,SACKmB,EAAKf,MADAe,EAAKnB,IAInB,sBAAKJ,UAAU,QAAf,UACI,cAAC,IAAD,CAAmB0B,QAAS,kBAAMR,EAAWK,EAAKnB,KAAKJ,UAAU,gBACjE,cAAC,IAAD,CAAQ0B,QAAS,kBAAML,EAAQ,CAACjB,GAAImB,EAAKnB,GAAIO,MAAOY,EAAKf,QAAQR,UAAU,mBAR1EwB,OC0BEG,MAhDf,WACI,MAAyB9B,mBAAS,IAAlC,mBAAMmB,EAAN,KAAaY,EAAb,KAsCA,OACI,gCACI,4DACA,cAAC,EAAD,CAAU3B,SAvCF,SAAAsB,GAAS,IAAD,EACpB,GAAIA,EAAKf,OAAQ,QAAQqB,KAAKN,EAAKf,MAAnC,CAIJ,IAAMsB,EAAQ,CAAIP,GAAJ,mBAAaP,IAE3BY,EAASE,IACT,EAAAC,SAAQC,IAAR,SAAYT,GAAZ,mBAAoBP,SAgCZ,cAAC,EAAD,CAAMA,MAAOA,EAAOC,aAdP,SAAAb,GACjB,IAAI6B,EAAejB,EAAMM,KAAI,SAAAC,GAIzB,OAHIA,EAAKnB,KAAOA,IACZmB,EAAKE,YAAcF,EAAKE,YAErBF,KAEXK,EAASK,IAO2Cf,WApBrC,SAAAd,GACf,IAAM8B,EAAY,YAAIlB,GAAOmB,QAAO,SAAAZ,GAAI,OAAIA,EAAKnB,KAAOA,KAExDwB,EAASM,IAiBmEf,WA5B7D,SAACiB,EAAQC,GACpBA,EAAS7B,OAAQ,QAAQqB,KAAKQ,EAAS7B,OAI3CoB,GAAS,SAAAU,GAAI,OAAIA,EAAKhB,KAAI,SAAAiB,GAAI,OAAKA,EAAKnC,KAAOgC,EAASC,EAAUE,eCX3DC,MARf,WACE,OACE,qBAAKxC,UAAU,WAAf,SACE,cAAC,EAAD,OCHNyC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ea1edde8.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction TodoForm(props) {\r\nconst [input, setInput] = useState('');\r\n\r\nconst handleChange = e => {\r\n    setInput(e.target.value)\r\n}\r\n\r\nconst handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n        id: Math.floor(Math.random() * 10000),\r\n        text: input\r\n    });\r\n\r\n    setInput('')\r\n\r\n};\r\n\r\n    return (\r\n        <form className='todo-form' onSubmit={handleSubmit}>\r\n            <input\r\n            type='text'\r\n            placeholder='Add a todo'\r\n            value={input}\r\n            name='text'\r\n            className='todo-input'\r\n            onChange={handleChange}\r\n            />\r\n            <button className='todo-button'>Add Todo</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, {useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { RiCloseCircleLine } from 'react-icons/ri'\r\nimport { TiEdit } from 'react-icons/ti'\r\n\r\n\r\nfunction Todo({ todos, completeTodo, removeTodo, updateTodo }) {\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: ''\r\n    })\r\n\r\n    const submitUpdate = value => {\r\n        updateTodo(edit.id, value)\r\n        setEdit({\r\n            id: null,\r\n            value: ''\r\n        })\r\n    }\r\n\r\n    if (edit.id){\r\n        return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n    }\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} \r\n        key={index}\r\n        >\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n\r\n        <div className=\"icons\">\r\n            <RiCloseCircleLine onClick={() => removeTodo(todo.id)} className='delete-icon'/>\r\n            <TiEdit onClick={() => setEdit({id: todo.id, value: todo.text})} className='edit-icon' />\r\n        </div>\r\n\r\n        </div>\r\n\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nfunction TodoList() {\r\n    const[todos, setTodos] = useState([])\r\n\r\n    const addTodo = todo => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n\r\n    const newTodos = [todo, ...todos]\r\n\r\n    setTodos(newTodos)\r\n    console.log(todo,...todos)\r\n\r\n    };\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!newValue.text || /^\\s*$/.test(newValue.text)){\r\n            return;\r\n        }\r\n\r\n        setTodos(prev => prev.map(item => (item.id === todoId ? newValue: item)))\r\n    }\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(updatedTodos);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>What's the Plan for Today?</h1>\r\n            <TodoForm onSubmit={addTodo}/>\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;\r\n","import React from 'react';\nimport './App.css';\nimport TodoForm from './components/TodoForm';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}